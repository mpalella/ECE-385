|Final_Project_top
CLOCK_50 => Clk.IN6
KEY[0] => Reset_h.DATAIN
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => _.IN1
HEX0[0] << HexDriver:hex_inst_0.port1
HEX0[1] << HexDriver:hex_inst_0.port1
HEX0[2] << HexDriver:hex_inst_0.port1
HEX0[3] << HexDriver:hex_inst_0.port1
HEX0[4] << HexDriver:hex_inst_0.port1
HEX0[5] << HexDriver:hex_inst_0.port1
HEX0[6] << HexDriver:hex_inst_0.port1
HEX1[0] << HexDriver:hex_inst_1.port1
HEX1[1] << HexDriver:hex_inst_1.port1
HEX1[2] << HexDriver:hex_inst_1.port1
HEX1[3] << HexDriver:hex_inst_1.port1
HEX1[4] << HexDriver:hex_inst_1.port1
HEX1[5] << HexDriver:hex_inst_1.port1
HEX1[6] << HexDriver:hex_inst_1.port1
AUD_BCLK => AUD_BCLK.IN1
AUD_DACLRCK => AUD_DACLRCK.IN1
AUD_XCK << audio_interface_plat:audio_transmit.AUD_MCLK
AUD_DACDAT << audio_interface_plat:audio_transmit.AUD_DACDAT
I2C_SCLK << audio_interface_plat:audio_transmit.I2C_SCLK
I2C_SDAT << audio_interface_plat:audio_transmit.I2C_SDAT
keycode[0] => keycode[0].IN2
keycode[1] => keycode[1].IN2
keycode[2] => keycode[2].IN2
keycode[3] => keycode[3].IN2
keycode[4] => keycode[4].IN2
keycode[5] => keycode[5].IN2
keycode[6] => keycode[6].IN2
keycode[7] => keycode[7].IN2


|Final_Project_top|vga_clk:vga_clk_instance
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk


|Final_Project_top|vga_clk:vga_clk_instance|altpll:altpll_component
inclk[0] => vga_clk_altpll:auto_generated.inclk[0]
inclk[1] => vga_clk_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|Final_Project_top|vga_clk:vga_clk_instance|altpll:altpll_component|vga_clk_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|Final_Project_top|controller:control
Clk => curr_state~1.DATAIN
Reset => curr_state.OUTPUTSELECT
Reset => curr_state.OUTPUTSELECT
Reset => curr_state.OUTPUTSELECT
Reset => curr_state.OUTPUTSELECT
Reset => curr_state.OUTPUTSELECT
init_finish => next_state.OUTPUTSELECT
init_finish => next_state.OUTPUTSELECT
init_finish => next_state.OUTPUTSELECT
init_finish => next_state.OUTPUTSELECT
init_finish => next_state.OUTPUTSELECT
start => next_state.OUTPUTSELECT
start => next_state.OUTPUTSELECT
start => next_state.OUTPUTSELECT
start => next_state.OUTPUTSELECT
start => next_state.OUTPUTSELECT
start => next_state.OUTPUTSELECT
start => next_state.OUTPUTSELECT
start => next_state.OUTPUTSELECT
start => next_state.OUTPUTSELECT
start => next_state.OUTPUTSELECT
start => next_state.OUTPUTSELECT
start => next_state.OUTPUTSELECT
start => next_state.OUTPUTSELECT
start => next_state.OUTPUTSELECT
init <= init.DB_MAX_OUTPUT_PORT_TYPE
CS <= CS.DB_MAX_OUTPUT_PORT_TYPE


|Final_Project_top|audio_interface_plat:audio_transmit
Clk => Clk.IN1
Reset => Reset.IN1
INIT => INIT.IN1
AUD_DACLRCK => AUD_DACLRCK.IN1
AUD_BCLK => AUD_BCLK.IN1
DATA[0] => DATA[0].IN2
DATA[1] => DATA[1].IN2
DATA[2] => DATA[2].IN2
DATA[3] => DATA[3].IN2
DATA[4] => DATA[4].IN2
DATA[5] => DATA[5].IN2
DATA[6] => DATA[6].IN2
DATA[7] => DATA[7].IN2
DATA[8] => DATA[8].IN2
DATA[9] => DATA[9].IN2
DATA[10] => DATA[10].IN2
DATA[11] => DATA[11].IN2
DATA[12] => DATA[12].IN2
DATA[13] => DATA[13].IN2
DATA[14] => DATA[14].IN2
DATA[15] => DATA[15].IN2
INIT_FINISH <= audio_interface:A1.init_finish
AUD_MCLK <= audio_interface:A1.AUD_MCLK
AUD_DACDAT <= audio_interface:A1.AUD_DACDAT
I2C_SDAT <= audio_interface:A1.I2C_SDAT
I2C_SCLK <= audio_interface:A1.I2C_SCLK
data_over <= audio_interface:A1.data_over


|Final_Project_top|audio_interface_plat:audio_transmit|audio_interface:A1
LDATA[0] => LRDATA[16].DATAIN
LDATA[1] => LRDATA[17].DATAIN
LDATA[2] => LRDATA[18].DATAIN
LDATA[3] => LRDATA[19].DATAIN
LDATA[4] => LRDATA[20].DATAIN
LDATA[5] => LRDATA[21].DATAIN
LDATA[6] => LRDATA[22].DATAIN
LDATA[7] => LRDATA[23].DATAIN
LDATA[8] => LRDATA[24].DATAIN
LDATA[9] => LRDATA[25].DATAIN
LDATA[10] => LRDATA[26].DATAIN
LDATA[11] => LRDATA[27].DATAIN
LDATA[12] => LRDATA[28].DATAIN
LDATA[13] => LRDATA[29].DATAIN
LDATA[14] => LRDATA[30].DATAIN
LDATA[15] => LRDATA[31].DATAIN
RDATA[0] => LRDATA[0].DATAIN
RDATA[1] => LRDATA[1].DATAIN
RDATA[2] => LRDATA[2].DATAIN
RDATA[3] => LRDATA[3].DATAIN
RDATA[4] => LRDATA[4].DATAIN
RDATA[5] => LRDATA[5].DATAIN
RDATA[6] => LRDATA[6].DATAIN
RDATA[7] => LRDATA[7].DATAIN
RDATA[8] => LRDATA[8].DATAIN
RDATA[9] => LRDATA[9].DATAIN
RDATA[10] => LRDATA[10].DATAIN
RDATA[11] => LRDATA[11].DATAIN
RDATA[12] => LRDATA[12].DATAIN
RDATA[13] => LRDATA[13].DATAIN
RDATA[14] => LRDATA[14].DATAIN
RDATA[15] => LRDATA[15].DATAIN
clk => adc_full~reg0.CLK
clk => adc_count[0].CLK
clk => adc_count[1].CLK
clk => adc_count[2].CLK
clk => adc_count[3].CLK
clk => adc_count[4].CLK
clk => adc_count[5].CLK
clk => adc_reg_val[0].CLK
clk => adc_reg_val[1].CLK
clk => adc_reg_val[2].CLK
clk => adc_reg_val[3].CLK
clk => adc_reg_val[4].CLK
clk => adc_reg_val[5].CLK
clk => adc_reg_val[6].CLK
clk => adc_reg_val[7].CLK
clk => adc_reg_val[8].CLK
clk => adc_reg_val[9].CLK
clk => adc_reg_val[10].CLK
clk => adc_reg_val[11].CLK
clk => adc_reg_val[12].CLK
clk => adc_reg_val[13].CLK
clk => adc_reg_val[14].CLK
clk => adc_reg_val[15].CLK
clk => adc_reg_val[16].CLK
clk => adc_reg_val[17].CLK
clk => adc_reg_val[18].CLK
clk => adc_reg_val[19].CLK
clk => adc_reg_val[20].CLK
clk => adc_reg_val[21].CLK
clk => adc_reg_val[22].CLK
clk => adc_reg_val[23].CLK
clk => adc_reg_val[24].CLK
clk => adc_reg_val[25].CLK
clk => adc_reg_val[26].CLK
clk => adc_reg_val[27].CLK
clk => adc_reg_val[28].CLK
clk => adc_reg_val[29].CLK
clk => adc_reg_val[30].CLK
clk => adc_reg_val[31].CLK
clk => bck1.CLK
clk => bck0.CLK
clk => adck1.CLK
clk => adck0.CLK
clk => dack1.CLK
clk => dack0.CLK
clk => sck1.CLK
clk => sck0.CLK
clk => i2c_counter[0].CLK
clk => i2c_counter[1].CLK
clk => i2c_counter[2].CLK
clk => i2c_counter[3].CLK
clk => i2c_counter[4].CLK
clk => i2c_counter[5].CLK
clk => i2c_counter[6].CLK
clk => i2c_counter[7].CLK
clk => i2c_counter[8].CLK
clk => i2c_counter[9].CLK
clk => flag1.CLK
clk => Bcount[0].CLK
clk => Bcount[1].CLK
clk => Bcount[2].CLK
clk => Bcount[3].CLK
clk => Bcount[4].CLK
clk => LRDATA[0].CLK
clk => LRDATA[1].CLK
clk => LRDATA[2].CLK
clk => LRDATA[3].CLK
clk => LRDATA[4].CLK
clk => LRDATA[5].CLK
clk => LRDATA[6].CLK
clk => LRDATA[7].CLK
clk => LRDATA[8].CLK
clk => LRDATA[9].CLK
clk => LRDATA[10].CLK
clk => LRDATA[11].CLK
clk => LRDATA[12].CLK
clk => LRDATA[13].CLK
clk => LRDATA[14].CLK
clk => LRDATA[15].CLK
clk => LRDATA[16].CLK
clk => LRDATA[17].CLK
clk => LRDATA[18].CLK
clk => LRDATA[19].CLK
clk => LRDATA[20].CLK
clk => LRDATA[21].CLK
clk => LRDATA[22].CLK
clk => LRDATA[23].CLK
clk => LRDATA[24].CLK
clk => LRDATA[25].CLK
clk => LRDATA[26].CLK
clk => LRDATA[27].CLK
clk => LRDATA[28].CLK
clk => LRDATA[29].CLK
clk => LRDATA[30].CLK
clk => LRDATA[31].CLK
clk => state~1.DATAIN
Reset => word_counter.IN1
Reset => adc_full~reg0.ACLR
Reset => adc_count[0].PRESET
Reset => adc_count[1].PRESET
Reset => adc_count[2].PRESET
Reset => adc_count[3].PRESET
Reset => adc_count[4].PRESET
Reset => adc_count[5].ACLR
Reset => adc_reg_val[0].ACLR
Reset => adc_reg_val[1].ACLR
Reset => adc_reg_val[2].ACLR
Reset => adc_reg_val[3].ACLR
Reset => adc_reg_val[4].ACLR
Reset => adc_reg_val[5].ACLR
Reset => adc_reg_val[6].ACLR
Reset => adc_reg_val[7].ACLR
Reset => adc_reg_val[8].ACLR
Reset => adc_reg_val[9].ACLR
Reset => adc_reg_val[10].ACLR
Reset => adc_reg_val[11].ACLR
Reset => adc_reg_val[12].ACLR
Reset => adc_reg_val[13].ACLR
Reset => adc_reg_val[14].ACLR
Reset => adc_reg_val[15].ACLR
Reset => adc_reg_val[16].ACLR
Reset => adc_reg_val[17].ACLR
Reset => adc_reg_val[18].ACLR
Reset => adc_reg_val[19].ACLR
Reset => adc_reg_val[20].ACLR
Reset => adc_reg_val[21].ACLR
Reset => adc_reg_val[22].ACLR
Reset => adc_reg_val[23].ACLR
Reset => adc_reg_val[24].ACLR
Reset => adc_reg_val[25].ACLR
Reset => adc_reg_val[26].ACLR
Reset => adc_reg_val[27].ACLR
Reset => adc_reg_val[28].ACLR
Reset => adc_reg_val[29].ACLR
Reset => adc_reg_val[30].ACLR
Reset => adc_reg_val[31].ACLR
Reset => bck1.ACLR
Reset => bck0.ACLR
Reset => adck1.ACLR
Reset => adck0.ACLR
Reset => dack1.ACLR
Reset => dack0.ACLR
Reset => sck1.ACLR
Reset => sck0.ACLR
Reset => i2c_counter[0].ACLR
Reset => i2c_counter[1].ACLR
Reset => i2c_counter[2].ACLR
Reset => i2c_counter[3].ACLR
Reset => i2c_counter[4].ACLR
Reset => i2c_counter[5].ACLR
Reset => i2c_counter[6].ACLR
Reset => i2c_counter[7].ACLR
Reset => i2c_counter[8].ACLR
Reset => i2c_counter[9].ACLR
Reset => Bcount[0].PRESET
Reset => Bcount[1].PRESET
Reset => Bcount[2].PRESET
Reset => Bcount[3].PRESET
Reset => Bcount[4].PRESET
Reset => LRDATA[0].ACLR
Reset => LRDATA[1].ACLR
Reset => LRDATA[2].ACLR
Reset => LRDATA[3].ACLR
Reset => LRDATA[4].ACLR
Reset => LRDATA[5].ACLR
Reset => LRDATA[6].ACLR
Reset => LRDATA[7].ACLR
Reset => LRDATA[8].ACLR
Reset => LRDATA[9].ACLR
Reset => LRDATA[10].ACLR
Reset => LRDATA[11].ACLR
Reset => LRDATA[12].ACLR
Reset => LRDATA[13].ACLR
Reset => LRDATA[14].ACLR
Reset => LRDATA[15].ACLR
Reset => LRDATA[16].ACLR
Reset => LRDATA[17].ACLR
Reset => LRDATA[18].ACLR
Reset => LRDATA[19].ACLR
Reset => LRDATA[20].ACLR
Reset => LRDATA[21].ACLR
Reset => LRDATA[22].ACLR
Reset => LRDATA[23].ACLR
Reset => LRDATA[24].ACLR
Reset => LRDATA[25].ACLR
Reset => LRDATA[26].ACLR
Reset => LRDATA[27].ACLR
Reset => LRDATA[28].ACLR
Reset => LRDATA[29].ACLR
Reset => LRDATA[30].ACLR
Reset => LRDATA[31].ACLR
Reset => state~3.DATAIN
Reset => flag1.ENA
INIT => ~NO_FANOUT~
init_finish <= init_over.DB_MAX_OUTPUT_PORT_TYPE
adc_full <= adc_full~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_over <= flag1.DB_MAX_OUTPUT_PORT_TYPE
AUD_MCLK <= i2c_counter[2].DB_MAX_OUTPUT_PORT_TYPE
AUD_BCLK => bck0.DATAIN
AUD_ADCDAT => adc_reg_val[31].DATAIN
AUD_ADCDAT => adc_reg_val[30].DATAIN
AUD_ADCDAT => adc_reg_val[29].DATAIN
AUD_ADCDAT => adc_reg_val[28].DATAIN
AUD_ADCDAT => adc_reg_val[27].DATAIN
AUD_ADCDAT => adc_reg_val[26].DATAIN
AUD_ADCDAT => adc_reg_val[25].DATAIN
AUD_ADCDAT => adc_reg_val[24].DATAIN
AUD_ADCDAT => adc_reg_val[23].DATAIN
AUD_ADCDAT => adc_reg_val[22].DATAIN
AUD_ADCDAT => adc_reg_val[21].DATAIN
AUD_ADCDAT => adc_reg_val[20].DATAIN
AUD_ADCDAT => adc_reg_val[19].DATAIN
AUD_ADCDAT => adc_reg_val[18].DATAIN
AUD_ADCDAT => adc_reg_val[17].DATAIN
AUD_ADCDAT => adc_reg_val[16].DATAIN
AUD_ADCDAT => adc_reg_val[15].DATAIN
AUD_ADCDAT => adc_reg_val[14].DATAIN
AUD_ADCDAT => adc_reg_val[13].DATAIN
AUD_ADCDAT => adc_reg_val[12].DATAIN
AUD_ADCDAT => adc_reg_val[11].DATAIN
AUD_ADCDAT => adc_reg_val[10].DATAIN
AUD_ADCDAT => adc_reg_val[9].DATAIN
AUD_ADCDAT => adc_reg_val[8].DATAIN
AUD_ADCDAT => adc_reg_val[7].DATAIN
AUD_ADCDAT => adc_reg_val[6].DATAIN
AUD_ADCDAT => adc_reg_val[5].DATAIN
AUD_ADCDAT => adc_reg_val[4].DATAIN
AUD_ADCDAT => adc_reg_val[3].DATAIN
AUD_ADCDAT => adc_reg_val[2].DATAIN
AUD_ADCDAT => adc_reg_val[1].DATAIN
AUD_ADCDAT => adc_reg_val[0].DATAIN
AUD_DACDAT <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
AUD_DACLRCK => dack0.DATAIN
AUD_ADCLRCK => adck0.DATAIN
I2C_SDAT <= I2C_SDAT.DB_MAX_OUTPUT_PORT_TYPE
I2C_SCLK <= SCLK_int.DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[0] <= adc_reg_val[0].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[1] <= adc_reg_val[1].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[2] <= adc_reg_val[2].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[3] <= adc_reg_val[3].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[4] <= adc_reg_val[4].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[5] <= adc_reg_val[5].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[6] <= adc_reg_val[6].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[7] <= adc_reg_val[7].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[8] <= adc_reg_val[8].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[9] <= adc_reg_val[9].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[10] <= adc_reg_val[10].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[11] <= adc_reg_val[11].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[12] <= adc_reg_val[12].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[13] <= adc_reg_val[13].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[14] <= adc_reg_val[14].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[15] <= adc_reg_val[15].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[16] <= adc_reg_val[16].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[17] <= adc_reg_val[17].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[18] <= adc_reg_val[18].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[19] <= adc_reg_val[19].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[20] <= adc_reg_val[20].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[21] <= adc_reg_val[21].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[22] <= adc_reg_val[22].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[23] <= adc_reg_val[23].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[24] <= adc_reg_val[24].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[25] <= adc_reg_val[25].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[26] <= adc_reg_val[26].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[27] <= adc_reg_val[27].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[28] <= adc_reg_val[28].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[29] <= adc_reg_val[29].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[30] <= adc_reg_val[30].DB_MAX_OUTPUT_PORT_TYPE
ADCDATA[31] <= adc_reg_val[31].DB_MAX_OUTPUT_PORT_TYPE


|Final_Project_top|wavetable_synthesizer:sine_synth1
Clk => phase[0].CLK
Clk => phase[1].CLK
Clk => phase[2].CLK
Clk => phase[3].CLK
Clk => phase[4].CLK
Clk => phase[5].CLK
Clk => phase[6].CLK
Clk => phase[7].CLK
Clk => phase[8].CLK
Clk => phase[9].CLK
Clk => phase[10].CLK
Clk => phase[11].CLK
Clk => phase[12].CLK
Clk => phase[13].CLK
Clk => phase[14].CLK
Clk => phase[15].CLK
Clk => phase[16].CLK
Clk => phase[17].CLK
Clk => phase[18].CLK
Clk => phase[19].CLK
Clk => phase[20].CLK
Clk => phase[21].CLK
Clk => phase[22].CLK
Clk => phase[23].CLK
Clk => frequency[0].CLK
Clk => frequency[1].CLK
Clk => frequency[2].CLK
Clk => frequency[3].CLK
Clk => frequency[4].CLK
Clk => frequency[5].CLK
Clk => frequency[6].CLK
Clk => frequency[7].CLK
Clk => frequency[8].CLK
Clk => frequency[9].CLK
Clk => frequency[10].CLK
Clk => frequency[11].CLK
Clk => frequency[12].CLK
Clk => frequency[13].CLK
Clk => frequency[14].CLK
Clk => frequency[15].CLK
Clk => frequency[16].CLK
Clk => frequency[17].CLK
Clk => frequency[18].CLK
Clk => frequency[19].CLK
Clk => frequency[20].CLK
Clk => frequency[21].CLK
Clk => frequency[22].CLK
Clk => frequency[23].CLK
Reset => always0.IN0
CS => Decoder0.IN0
CS => always0.IN1
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
sample_Clk => phase.OUTPUTSELECT
freq[0] => frequency.DATAA
freq[1] => frequency.DATAA
freq[2] => frequency.DATAA
freq[3] => frequency.DATAA
freq[4] => frequency.DATAA
freq[5] => frequency.DATAA
freq[6] => frequency.DATAA
freq[7] => frequency.DATAA
freq[8] => frequency.DATAA
freq[9] => frequency.DATAA
freq[10] => frequency.DATAA
freq[11] => frequency.DATAA
freq[12] => frequency.DATAA
freq[13] => frequency.DATAA
freq[14] => frequency.DATAA
freq[15] => frequency.DATAA
freq[16] => frequency.DATAA
freq[17] => frequency.DATAA
freq[18] => frequency.DATAA
freq[19] => frequency.DATAA
freq[20] => frequency.DATAA
freq[21] => frequency.DATAA
freq[22] => frequency.DATAA
freq[23] => frequency.DATAA
out[0] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[9] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[10] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[11] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[12] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[13] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[14] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[15] <= out.DB_MAX_OUTPUT_PORT_TYPE


|Final_Project_top|KeyMapper:Mapper1
keyboard_in[0] => Decoder0.IN7
keyboard_in[1] => Decoder0.IN6
keyboard_in[2] => Decoder0.IN5
keyboard_in[3] => Decoder0.IN4
keyboard_in[4] => Decoder0.IN3
keyboard_in[5] => Decoder0.IN2
keyboard_in[6] => Decoder0.IN1
keyboard_in[7] => Decoder0.IN0
note_out[0] <= WideOr19.DB_MAX_OUTPUT_PORT_TYPE
note_out[1] <= WideOr18.DB_MAX_OUTPUT_PORT_TYPE
note_out[2] <= WideOr17.DB_MAX_OUTPUT_PORT_TYPE
note_out[3] <= WideOr16.DB_MAX_OUTPUT_PORT_TYPE
note_out[4] <= WideOr15.DB_MAX_OUTPUT_PORT_TYPE
note_out[5] <= WideOr14.DB_MAX_OUTPUT_PORT_TYPE
note_out[6] <= WideOr13.DB_MAX_OUTPUT_PORT_TYPE
note_out[7] <= WideOr12.DB_MAX_OUTPUT_PORT_TYPE
note_out[8] <= WideOr11.DB_MAX_OUTPUT_PORT_TYPE
note_out[9] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
note_out[10] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
note_out[11] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
note_out[12] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
note_out[13] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
note_out[14] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
note_out[15] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
note_out[16] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
note_out[17] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
note_out[18] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
note_out[19] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
note_out[20] <= <GND>
note_out[21] <= <GND>
note_out[22] <= <GND>
note_out[23] <= <GND>


|Final_Project_top|sync:butt_sync
Clk => q~reg0.CLK
d => q~reg0.DATAIN
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Final_Project_top|pulse:Signal_Pulse
Clk => curr_state~1.DATAIN
data => next_state.OUTPUTSELECT
data => next_state.OUTPUTSELECT
data => next_state.OUTPUTSELECT
data => next_state.OUTPUTSELECT
data => next_state.OUTPUTSELECT
data => next_state.OUTPUTSELECT
Reset => curr_state.OUTPUTSELECT
Reset => curr_state.OUTPUTSELECT
Reset => curr_state.OUTPUTSELECT
out <= out.DB_MAX_OUTPUT_PORT_TYPE


|Final_Project_top|HexDriver:hex_inst_0
In0[0] => Decoder0.IN3
In0[1] => Decoder0.IN2
In0[2] => Decoder0.IN1
In0[3] => Decoder0.IN0
Out0[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
Out0[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
Out0[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
Out0[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
Out0[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
Out0[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
Out0[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|Final_Project_top|HexDriver:hex_inst_1
In0[0] => Decoder0.IN3
In0[1] => Decoder0.IN2
In0[2] => Decoder0.IN1
In0[3] => Decoder0.IN0
Out0[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
Out0[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
Out0[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
Out0[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
Out0[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
Out0[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
Out0[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


